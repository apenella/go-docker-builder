services:

  base-registry:
    image: registry:2
    restart: always
    volumes:
      - ssl:/ssl:ro
      - ./files/base-registry-storage:/var/lib/registry
    networks:
      default:
        aliases:
          - base-registry.go-docker-builder.test
            
  registry:
    image: registry:2
    restart: always
    environment:
      - REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY=/data
      - REGISTRY_AUTH=token
      - REGISTRY_AUTH_TOKEN_REALM=https://auth.go-docker-builder.test:5001/auth
      - REGISTRY_AUTH_TOKEN_SERVICE="Docker registry"
      - REGISTRY_AUTH_TOKEN_ISSUER="go-docker-builder"
      - REGISTRY_HTTP_ADDR=0.0.0.0:443
      - REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE=/ssl/go-docker-builder.test.crt
      - REGISTRY_HTTP_TLS_CERTIFICATE=/ssl/go-docker-builder.test.crt
      - REGISTRY_HTTP_TLS_KEY=/ssl/go-docker-builder.test.key
    volumes:
      - ssl:/ssl:ro
    networks:
      default:
        aliases:
          - registry.go-docker-builder.test
          - example.docker.com
    depends_on: 
      - dockerauth

  dockerauth:
    image: cesanta/docker_auth:1
    restart: always
    volumes:
      - ./docker_auth:/config:ro
      - ssl:/ssl:ro
    command: 
      - -logtostderr
      - /config/config.yml
    networks:
      default:
        aliases:
          - auth.go-docker-builder.test

  client:
    build:
      context: client
    working_dir: /app
    privileged: true
    command:
      - tail
      - -f
      - /dev/null
    environment:
      - GIT_KEYS=/git/keys
      - CGO_ENABLED=0
    volumes:
      - ssl:/ssl
      - ..:/app
      - ssh:/root/.ssh
      - ./client/daemon.json:/etc/docker/daemon.json

  gitserver:
    build:
      context: gitserver
    environment:
      - GIT_KEYS=/git/keys
    volumes:
      - ssh:/git/keys
      - ./files/repos:/git/repos
    networks:
      default:
        aliases:
          - gitserver.go-docker-builder.test
    deploy:
      resources:
        limits:
          memory: 10M
    healthcheck:
      test: ["CMD", "nc", "-vz", "localhost","80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  openssh:
    build:
      context: openssh-client
    entrypoint: 
      - /usr/bin/ssh-keygen
    working_dir: /ssh
    volumes:
      - ssh:/ssh
    command: ["--help"]
    deploy:
      resources:
        limits:
          memory: 10M

  openssl:
    build:
      context: openssl-client
    entrypoint: 
      - openssl
    working_dir: /ssl
    volumes:
      - ssl:/ssl
      - ./files/ssl:/root/ssl
    command: ["version"]
    deploy:
      resources:
        limits:
          memory: 10M

volumes:
  ssh:
  ssl:
